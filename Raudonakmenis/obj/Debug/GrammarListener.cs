//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\dzera\Documents\C#\Raudonakmenis1\raudonakmenis\Raudonakmenis\Grammar.g4 by ANTLR 4.6.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace Raudonakmenis {
using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="GrammarParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6")]
[System.CLSCompliant(false)]
public interface IGrammarListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.compileUnit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCompileUnit([NotNull] GrammarParser.CompileUnitContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.compileUnit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCompileUnit([NotNull] GrammarParser.CompileUnitContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProgram([NotNull] GrammarParser.ProgramContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProgram([NotNull] GrammarParser.ProgramContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.line"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLine([NotNull] GrammarParser.LineContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.line"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLine([NotNull] GrammarParser.LineContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStatement([NotNull] GrammarParser.StatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStatement([NotNull] GrammarParser.StatementContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.assignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssignment([NotNull] GrammarParser.AssignmentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.assignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssignment([NotNull] GrammarParser.AssignmentContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.functionCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunctionCall([NotNull] GrammarParser.FunctionCallContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.functionCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunctionCall([NotNull] GrammarParser.FunctionCallContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.ifBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIfBlock([NotNull] GrammarParser.IfBlockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.ifBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIfBlock([NotNull] GrammarParser.IfBlockContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.blockas"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBlockas([NotNull] GrammarParser.BlockasContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.blockas"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBlockas([NotNull] GrammarParser.BlockasContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.elseIfBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterElseIfBlock([NotNull] GrammarParser.ElseIfBlockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.elseIfBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitElseIfBlock([NotNull] GrammarParser.ElseIfBlockContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.whileBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWhileBlock([NotNull] GrammarParser.WhileBlockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.whileBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWhileBlock([NotNull] GrammarParser.WhileBlockContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpression([NotNull] GrammarParser.ExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpression([NotNull] GrammarParser.ExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.funkyOp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunkyOp([NotNull] GrammarParser.FunkyOpContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.funkyOp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunkyOp([NotNull] GrammarParser.FunkyOpContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.multOp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMultOp([NotNull] GrammarParser.MultOpContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.multOp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMultOp([NotNull] GrammarParser.MultOpContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.addOp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAddOp([NotNull] GrammarParser.AddOpContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.addOp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAddOp([NotNull] GrammarParser.AddOpContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.compareOp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCompareOp([NotNull] GrammarParser.CompareOpContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.compareOp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCompareOp([NotNull] GrammarParser.CompareOpContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.boolOp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBoolOp([NotNull] GrammarParser.BoolOpContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.boolOp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBoolOp([NotNull] GrammarParser.BoolOpContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.constant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConstant([NotNull] GrammarParser.ConstantContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.constant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConstant([NotNull] GrammarParser.ConstantContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBlock([NotNull] GrammarParser.BlockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBlock([NotNull] GrammarParser.BlockContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.classDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterClassDeclaration([NotNull] GrammarParser.ClassDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.classDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitClassDeclaration([NotNull] GrammarParser.ClassDeclarationContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.className"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterClassName([NotNull] GrammarParser.ClassNameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.className"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitClassName([NotNull] GrammarParser.ClassNameContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.classBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterClassBody([NotNull] GrammarParser.ClassBodyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.classBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitClassBody([NotNull] GrammarParser.ClassBodyContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.classMember"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterClassMember([NotNull] GrammarParser.ClassMemberContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.classMember"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitClassMember([NotNull] GrammarParser.ClassMemberContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.classCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterClassCall([NotNull] GrammarParser.ClassCallContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.classCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitClassCall([NotNull] GrammarParser.ClassCallContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.classFunctionCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterClassFunctionCall([NotNull] GrammarParser.ClassFunctionCallContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.classFunctionCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitClassFunctionCall([NotNull] GrammarParser.ClassFunctionCallContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.fieldDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFieldDeclaration([NotNull] GrammarParser.FieldDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.fieldDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFieldDeclaration([NotNull] GrammarParser.FieldDeclarationContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.fieldName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFieldName([NotNull] GrammarParser.FieldNameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.fieldName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFieldName([NotNull] GrammarParser.FieldNameContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.methodDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMethodDeclaration([NotNull] GrammarParser.MethodDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.methodDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMethodDeclaration([NotNull] GrammarParser.MethodDeclarationContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.methodName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMethodName([NotNull] GrammarParser.MethodNameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.methodName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMethodName([NotNull] GrammarParser.MethodNameContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.parameterList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParameterList([NotNull] GrammarParser.ParameterListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.parameterList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParameterList([NotNull] GrammarParser.ParameterListContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.parameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParameter([NotNull] GrammarParser.ParameterContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.parameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParameter([NotNull] GrammarParser.ParameterContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.parameterName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParameterName([NotNull] GrammarParser.ParameterNameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.parameterName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParameterName([NotNull] GrammarParser.ParameterNameContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterType([NotNull] GrammarParser.TypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitType([NotNull] GrammarParser.TypeContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.methodBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMethodBody([NotNull] GrammarParser.MethodBodyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.methodBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMethodBody([NotNull] GrammarParser.MethodBodyContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.blockWithReturn"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBlockWithReturn([NotNull] GrammarParser.BlockWithReturnContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.blockWithReturn"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBlockWithReturn([NotNull] GrammarParser.BlockWithReturnContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.returnStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReturnStatement([NotNull] GrammarParser.ReturnStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.returnStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReturnStatement([NotNull] GrammarParser.ReturnStatementContext context);
}
} // namespace Raudonakmenis
