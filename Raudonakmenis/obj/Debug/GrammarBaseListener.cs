//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\dzera\Documents\C#\Raudonakmenis1\raudonakmenis\Raudonakmenis\Grammar.g4 by ANTLR 4.6.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace Raudonakmenis {

using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IGrammarListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6")]
[System.CLSCompliant(false)]
public partial class GrammarBaseListener : IGrammarListener {
	/// <summary>
	/// Enter a parse tree produced by the <c>compareExpression</c>
	/// labeled alternative in <see cref="GrammarParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCompareExpression([NotNull] GrammarParser.CompareExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>compareExpression</c>
	/// labeled alternative in <see cref="GrammarParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCompareExpression([NotNull] GrammarParser.CompareExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>idExpression</c>
	/// labeled alternative in <see cref="GrammarParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIdExpression([NotNull] GrammarParser.IdExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>idExpression</c>
	/// labeled alternative in <see cref="GrammarParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIdExpression([NotNull] GrammarParser.IdExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>constantExpression</c>
	/// labeled alternative in <see cref="GrammarParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConstantExpression([NotNull] GrammarParser.ConstantExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>constantExpression</c>
	/// labeled alternative in <see cref="GrammarParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConstantExpression([NotNull] GrammarParser.ConstantExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>addExpression</c>
	/// labeled alternative in <see cref="GrammarParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAddExpression([NotNull] GrammarParser.AddExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>addExpression</c>
	/// labeled alternative in <see cref="GrammarParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAddExpression([NotNull] GrammarParser.AddExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>boolExpression</c>
	/// labeled alternative in <see cref="GrammarParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBoolExpression([NotNull] GrammarParser.BoolExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>boolExpression</c>
	/// labeled alternative in <see cref="GrammarParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBoolExpression([NotNull] GrammarParser.BoolExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>classExpression</c>
	/// labeled alternative in <see cref="GrammarParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterClassExpression([NotNull] GrammarParser.ClassExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>classExpression</c>
	/// labeled alternative in <see cref="GrammarParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitClassExpression([NotNull] GrammarParser.ClassExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>multExpression</c>
	/// labeled alternative in <see cref="GrammarParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMultExpression([NotNull] GrammarParser.MultExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>multExpression</c>
	/// labeled alternative in <see cref="GrammarParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMultExpression([NotNull] GrammarParser.MultExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>notExpression</c>
	/// labeled alternative in <see cref="GrammarParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNotExpression([NotNull] GrammarParser.NotExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>notExpression</c>
	/// labeled alternative in <see cref="GrammarParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNotExpression([NotNull] GrammarParser.NotExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>functionExpression</c>
	/// labeled alternative in <see cref="GrammarParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctionExpression([NotNull] GrammarParser.FunctionExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>functionExpression</c>
	/// labeled alternative in <see cref="GrammarParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctionExpression([NotNull] GrammarParser.FunctionExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by the <c>paranthesesExpression</c>
	/// labeled alternative in <see cref="GrammarParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParanthesesExpression([NotNull] GrammarParser.ParanthesesExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by the <c>paranthesesExpression</c>
	/// labeled alternative in <see cref="GrammarParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParanthesesExpression([NotNull] GrammarParser.ParanthesesExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.compileUnit"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCompileUnit([NotNull] GrammarParser.CompileUnitContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.compileUnit"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCompileUnit([NotNull] GrammarParser.CompileUnitContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.program"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterProgram([NotNull] GrammarParser.ProgramContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.program"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitProgram([NotNull] GrammarParser.ProgramContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.line"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLine([NotNull] GrammarParser.LineContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.line"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLine([NotNull] GrammarParser.LineContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStatement([NotNull] GrammarParser.StatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStatement([NotNull] GrammarParser.StatementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.assignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssignment([NotNull] GrammarParser.AssignmentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.assignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssignment([NotNull] GrammarParser.AssignmentContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.functionCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctionCall([NotNull] GrammarParser.FunctionCallContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.functionCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctionCall([NotNull] GrammarParser.FunctionCallContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.ifBlock"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIfBlock([NotNull] GrammarParser.IfBlockContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.ifBlock"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIfBlock([NotNull] GrammarParser.IfBlockContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.blockas"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBlockas([NotNull] GrammarParser.BlockasContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.blockas"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBlockas([NotNull] GrammarParser.BlockasContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.elseIfBlock"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterElseIfBlock([NotNull] GrammarParser.ElseIfBlockContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.elseIfBlock"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitElseIfBlock([NotNull] GrammarParser.ElseIfBlockContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.whileBlock"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWhileBlock([NotNull] GrammarParser.WhileBlockContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.whileBlock"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWhileBlock([NotNull] GrammarParser.WhileBlockContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpression([NotNull] GrammarParser.ExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpression([NotNull] GrammarParser.ExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.funkyOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunkyOp([NotNull] GrammarParser.FunkyOpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.funkyOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunkyOp([NotNull] GrammarParser.FunkyOpContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.multOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMultOp([NotNull] GrammarParser.MultOpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.multOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMultOp([NotNull] GrammarParser.MultOpContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.addOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAddOp([NotNull] GrammarParser.AddOpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.addOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAddOp([NotNull] GrammarParser.AddOpContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.compareOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCompareOp([NotNull] GrammarParser.CompareOpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.compareOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCompareOp([NotNull] GrammarParser.CompareOpContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.boolOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBoolOp([NotNull] GrammarParser.BoolOpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.boolOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBoolOp([NotNull] GrammarParser.BoolOpContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.constant"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConstant([NotNull] GrammarParser.ConstantContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.constant"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConstant([NotNull] GrammarParser.ConstantContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBlock([NotNull] GrammarParser.BlockContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBlock([NotNull] GrammarParser.BlockContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.classDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterClassDeclaration([NotNull] GrammarParser.ClassDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.classDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitClassDeclaration([NotNull] GrammarParser.ClassDeclarationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.className"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterClassName([NotNull] GrammarParser.ClassNameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.className"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitClassName([NotNull] GrammarParser.ClassNameContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.printStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPrintStatement([NotNull] GrammarParser.PrintStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.printStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPrintStatement([NotNull] GrammarParser.PrintStatementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.classBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterClassBody([NotNull] GrammarParser.ClassBodyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.classBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitClassBody([NotNull] GrammarParser.ClassBodyContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.classMember"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterClassMember([NotNull] GrammarParser.ClassMemberContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.classMember"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitClassMember([NotNull] GrammarParser.ClassMemberContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.classCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterClassCall([NotNull] GrammarParser.ClassCallContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.classCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitClassCall([NotNull] GrammarParser.ClassCallContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.classFunctionCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterClassFunctionCall([NotNull] GrammarParser.ClassFunctionCallContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.classFunctionCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitClassFunctionCall([NotNull] GrammarParser.ClassFunctionCallContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.fieldDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFieldDeclaration([NotNull] GrammarParser.FieldDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.fieldDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFieldDeclaration([NotNull] GrammarParser.FieldDeclarationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.fieldName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFieldName([NotNull] GrammarParser.FieldNameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.fieldName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFieldName([NotNull] GrammarParser.FieldNameContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.methodDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMethodDeclaration([NotNull] GrammarParser.MethodDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.methodDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMethodDeclaration([NotNull] GrammarParser.MethodDeclarationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.methodName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMethodName([NotNull] GrammarParser.MethodNameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.methodName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMethodName([NotNull] GrammarParser.MethodNameContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.parameterList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParameterList([NotNull] GrammarParser.ParameterListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.parameterList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParameterList([NotNull] GrammarParser.ParameterListContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.parameter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParameter([NotNull] GrammarParser.ParameterContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.parameter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParameter([NotNull] GrammarParser.ParameterContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.parameterName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParameterName([NotNull] GrammarParser.ParameterNameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.parameterName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParameterName([NotNull] GrammarParser.ParameterNameContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterType([NotNull] GrammarParser.TypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitType([NotNull] GrammarParser.TypeContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.methodBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMethodBody([NotNull] GrammarParser.MethodBodyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.methodBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMethodBody([NotNull] GrammarParser.MethodBodyContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.blockWithReturn"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBlockWithReturn([NotNull] GrammarParser.BlockWithReturnContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.blockWithReturn"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBlockWithReturn([NotNull] GrammarParser.BlockWithReturnContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="GrammarParser.returnStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReturnStatement([NotNull] GrammarParser.ReturnStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="GrammarParser.returnStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReturnStatement([NotNull] GrammarParser.ReturnStatementContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
} // namespace Raudonakmenis
